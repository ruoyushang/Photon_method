Setup:
	setupATLAS
	lsetup git

Check out the code:
	git clone https://:@gitlab.cern.ch:8443/rshang/PhotonTemplateMethod.git

A tutorial of the photon method:

	cd ScriptMaker
	python makeRunScript.py # this will generate scripts that run small single jobs in Scripts/	

	Now we need to compile the photon code
	cd ../Scripts
	sh run_361419_zmm.sh # this is a small job that runs over a Sherpa Z+jets sample (DSID361419) and compiles Root/GetBaseLineEvents.C 
	sh run_361062_gmc.sh # this is a small job that runs over a Sherpa photon+jets sample (DSID361062) and compiles Root/GetPhotonEvents.C

	Root/GetBaseLineEvents.C and Root/GetPhotonEvents.C take inputs from QuickAna ntuples
	and check the trigger requirements and analysis selections.
	The input directory of this tutorial is /eos/atlas/atlascerngroupdisk/phys-susy/strong2L/v02-04/MC/
	To take inputs from your customized ntuples, you will need to change the variable names in
	Root/InputVariables.C, Root/GetBaseLineEvents.C and Root/GetPhotonEvents.C

	After we compile the code, now we can run
	sh local_z.sh
	sh local_gmc.sh
	Then we will see many ntuples are produced in
	OutputNtuples/gmc/ and OutputNtuples/zjets/

	We need to merge the ntuples of individual DSID into inclusive files:
	cd ../OutputNtuples
	sh hadd.sh
	this will create OutputNtuples/gmc/gmc_raw.root, OutputNtuples/zjets/zjets_ee.root and  OutputNtuples/zjets/zjets_mm.root 

	After merging the files, go back to Scripts/
	cd ../Scripts
	sh run_gmc_sm.sh	# this script will derive smearing function from 1-jet events in gmc_raw.root, zjets_ee.root, and zjets_mm.root
				# and smear the photon resolution 
				# and create OutputNtuples/gmc/gmc_ee_McSmear.root and OutputNtuples/gmc/gmc_mm_McSmear.root 
	sh run_gmc_rw.sh	# this script will derive reweighting factors from gmc_raw.root, zjets_ee.root, and zjets_mm.root

	The resolution smearing is done in Root/GetPhotonSmearing.C 
	The reweighting is done in Root/GetPhotonReweighting.C 

	Up to here, the photon ntuple is corrected with smearing and reweighting.
	The two lepton distributions and MT2 are also added to OutputNtuples/gmc/gmc_ee_McSmear.root and OutputNtuples/gmc/gmc_mm_McSmear.root

	To have a quick look at the output:
	cd ../OutputNtuples
	root -l quickDraw.C 
	and you will see the photon MET distribution (red) is compared with the Z+jets MET distribution (blue)

	in quickDraw.C, you can see:

	The selection in the plot:
		TCut mycut = "";
		mycut += "bjet_n==0";  # the photon prediction is not restricted to b-veto region, you can remove this cut and see the difference
		mycut += "lep_pT[0]>20 && lep_pT[1]>20";
		mycut += "abs(lep_eta[0])<2.5 && abs(lep_eta[1])<2.5";
		mycut += "jet_n>=2";
		mycut += "Z_pt>50"; 	# the phtoon method does not provide low pT estimation, 
					# low pT (<50GeV) region will be covered by Upsilon template method.

	and the reweighitng factor:
		TCut weight_g = "totalWeight*36.1*1000*ptrw_bveto";	# totalWeight includes xsec, eventWeight, trigger weight, etc.
									# ptrw_bveto is the reweighting factor derived from a b-veto region	

	sanity check the smearing function:
	root -l drawSmearingHistogram.C
	you will see a plot of MET parallel distributions (projection of MET in the Z or photon direction):
		-- blue: Z+jets
		-- green: photon+jets before smearing
		-- red: photon+jets after smearing
		-- pink: smearing function used to correct photon resolution
	these plots are made in 1-jet region (where smearing function is derived),
	so you should see a good agreement between blue and red curves by design.
	In drawSmearingHistogram.C, TString index = "10" gives you the distribution in 500 < Z pT < 700 GeV range.
	Change the number to see other pT ranges.
	

	If the 1-jet region closure is bad in a pT range, it is often due to the poor statistics in that range.
	We need good statistics to make a shape of MET parallel for deconvolution.
	If there is one range does not have enough stat, then you should go to Root/BasicSetting.C and change the binning of sm_pt_bin 
	to make sure you have enough statistics in the relavent pT range. 
	
	In Root/BasicSetting.C, you can also see the variable event_interval = 10, this means this tutorial only runs 10% events in the samples.
	To run full stat job, change event_interval to 1.

	In Root/BasicSetting.C, smearing_method = 1 means the deconvolution is done using MC 1-jets events.
	You can change smearing_method to 2 if you want to derive the smearing function from data 1-jet events, or to 0 if you don't want smearing. 
